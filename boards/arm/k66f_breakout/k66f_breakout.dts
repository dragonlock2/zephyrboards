/dts-v1/;

#include <nxp/MK66FN2M0VMD18.dtsi>

/ {
	// bare minimum
	model = "MK66F Breakout Board";
	compatible = "nxp,mk66f18", "nxp,k66f", "nxp,k6x";

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
		zephyr,console = &uart0;
	};

	// supported peripherals
	aliases {
		led0 = &led_red;
		sw0 = &user_button;
	};

	leds {
		compatible = "gpio-leds";
		led_red: led_0 {
			gpios = <&gpiod 6 GPIO_ACTIVE_LOW>;
		};
		led_green: led_1 {
			gpios = <&gpiod 5 GPIO_ACTIVE_LOW>;
		};
		led_blue: led_2 {
			gpios = <&gpiod 4 GPIO_ACTIVE_LOW>;
		};
	};

	buttons {
		compatible = "gpio-keys";
		user_button: button_0 {
			gpios = <&gpiod 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			label = "user button";
		};
		sd_detect: sd_det_0 {
			gpios = <&gpiod 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
			label = "sd detect";
		};
		usbid_0: usbid_0 {
			gpios = <&gpioe 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			label = "USB0 ID";
		};
		usbid_1: usbid_1 {
			gpios = <&gpioe 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			label = "USB1 ID";
		};
	};
};

// bare minimum
&sim {
	pllfll-select = <KINETIS_SIM_PLLFLLSEL_MCGPLLCLK>;
	er32k-select = <KINETIS_SIM_ER32KSEL_RTC>;

	// needed if going at 180MHz
	// bus_clk {
	// 	clock-div = <3>;
	// };

	// flash_clk {
	// 	clock-div = <7>;
	// };
};

&cpu0 {
	clock-frequency = <120000000>;
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 0x00010000>;
			read-only;
		};

		/*
		 * The flash starting at 0x00010000 and ending at
		 * 0x0001ffff (sectors 16-31) is reserved for use
		 * by the application.
		 */
		storage_partition: partition@1e000 {
			label = "storage";
			reg = <0x0001e000 0x00002000>;
		};

		slot0_partition: partition@20000 {
			label = "image-0";
			reg = <0x00020000 0x00060000>;
		};
		slot1_partition: partition@80000 {
			label = "image-1";
			reg = <0x00080000 0x00060000>;
		};
		scratch_partition: partition@e0000 {
			label = "image-scratch";
			reg = <0x000e0000 0x00020000>;
		};
	};
};

&gpioa {
	status = "okay";
};

&gpiob {
	status = "okay";
};

&gpioc {
	status = "okay";
};

&gpiod {
	status = "okay";
};

&gpioe {
	status = "okay";
};

&uart0 {
	status = "okay";
	current-speed = <115200>;
	pinctrl-0 = <&UART0_RX_PTB16 &UART0_TX_PTB17>;
};

// supported peripherals
&adc0 {
	status = "okay";
};

&temp0 {
	status = "okay";
};

&spi0 {
	status = "okay";
	pinctrl-0 = <&SPI0_SCK_PTC5 &SPI0_SOUT_PTC6 &SPI0_SIN_PTC7>;

	cs-gpios = <&gpioc 4 GPIO_ACTIVE_LOW>;
};

&spi1 {
	status = "okay";
	pinctrl-0 = <&SPI1_SCK_PTE2 &SPI1_SOUT_PTE3 &SPI1_SIN_PTE1>;

	cs-gpios = <&gpioe 4 GPIO_ACTIVE_LOW>;

	sdhc0: sdhc@0 {
		compatible = "zephyr,mmc-spi-slot";
		reg = <0>;
		status = "okay";
		label = "SDHC0";
		spi-max-frequency = <24000000>;
	};
};

&i2c0 {
	status = "okay";
	pinctrl-0 = <&I2C0_SCL_PTD8 &I2C0_SDA_PTD9>;
	clock-frequency = <I2C_BITRATE_FAST_PLUS>;
};

&flexcan0 {
	status = "okay";
	pinctrl-0 = <&CAN0_TX_PTB18 &CAN0_RX_PTB19>;
	bus-speed = <125000>;
};

&CAN0_RX_PTB19 {
	bias-pull-up;
};

zephyr_udc0: &usbotg {
	status = "okay";
	num-bidir-endpoints = <8>;
};

&enet {
	status = "okay";
	pinctrl-0 = <&RMII0_RXER_PTA5 &RMII0_RXD1_PTA12
				&RMII0_RXD0_PTA13 &RMII0_CRS_DV_PTA14
				&RMII0_TXEN_PTA15 &RMII0_TXD0_PTA16
				&RMII0_TXD1_PTA17 &RMII0_MDIO_PTB0
				&RMII0_MDC_PTB1   &ENET_1588_CLKIN_PTE26>;
};

&RMII0_MDIO_PTB0 {
	bias-pull-up;
	drive-open-drain;
};